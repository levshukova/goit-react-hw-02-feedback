{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","StatisticsList","StatisticsItem","value","FeedbackOptions","options","onLeaveFeedback","FeedbackControls","map","option","type","btn","data-action","onClick","Section","title","children","Notification","message","App","state","props","initialValue","handleFeedback","target","dataset","action","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedbackCount","Math","round","this","positiveFeedback","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,eAAiB,mCAAmC,MAAQ,4B,uMC2BnHC,EAzBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAKC,UAAWC,IAAEP,WAAlB,SACE,qBAAIM,UAAWC,IAAEC,eAAjB,UACE,qBAAIF,UAAWC,IAAEE,eAAjB,kBACO,sBAAMH,UAAWC,IAAEG,MAAnB,SAA2BT,OAElC,qBAAIK,UAAWC,IAAEE,eAAjB,qBACU,sBAAMH,UAAWC,IAAEG,MAAnB,SAA2BR,OAErC,qBAAII,UAAWC,IAAEE,eAAjB,iBACM,sBAAMH,UAAWC,IAAEG,MAAnB,SAA2BP,OAEjC,qBAAIG,UAAWC,IAAEE,eAAjB,mBACQ,sBAAMH,UAAWC,IAAEG,MAAnB,SAA2BN,OAEnC,qBAAIE,UAAWC,IAAEE,eAAjB,+BAEE,uBAAMH,UAAWC,IAAEG,MAAnB,UAA2BL,EAA3B,gB,gBCDKM,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKP,UAAWC,IAAEO,iBAAlB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLX,UAAWC,IAAEW,IACbC,cAAaH,EACbI,QAASP,EAJX,SAOGG,GAFIA,S,gBCRA,SAASK,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,sBAAKjB,UAAWC,IAAEc,QAAlB,UACE,6BAAKC,IACJC,KCLQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,ICKPC,E,4MAIJC,MAAQ,CACN1B,KAAM,EAAK2B,MAAMC,aACjB3B,QAAS,EAAK0B,MAAMC,aACpB1B,IAAK,EAAKyB,MAAMC,c,EAElBC,eAAiB,YAAiB,IAC1Bb,EADyB,EAAbc,OACEC,QAAQC,OAC5B,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGlB,EAAOkB,EAAUlB,GAAQ,O,EAGvCmB,mBAAqB,WAAO,IAAD,EACM,EAAKT,MACpC,OAFyB,EACjB1B,KADiB,EACXC,QADW,EACFC,K,EAGzBkC,gCAAkC,WAAO,IAC/BpC,EAAS,EAAK0B,MAAd1B,KACFqC,EAAqB,EAAKF,qBAChC,OAAOE,EACHC,KAAKC,MAAOvC,EAAOqC,EAAsB,KACzC,G,uDAGI,IAAD,EACwBG,KAAKd,MAA5B1B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBmC,EAAqBG,KAAKL,qBAC1BM,EAAmBD,KAAKJ,kCAE9B,OACE,qCACE,cAAChB,EAAD,CAASC,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEV,QARQ,CAAC,OAAQ,UAAW,OAS5BC,gBAAiB4B,KAAKX,mBAG1B,cAACT,EAAD,CAASC,MAAO,aAAhB,SACGrB,GAAQC,GAAWC,EAClB,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkC,EACPjC,mBAAoBqC,IAGtB,cAAClB,EAAD,CAAcC,QAAQ,+B,GAnDhBkB,aAAZjB,EACGkB,aAAe,CACpBf,aAAc,GAyDHH,QC7DfmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BnD,EAAOC,QAAU,CAAC,iBAAmB,0CAA0C,IAAM,+B","file":"static/js/main.49582356.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatisticsList\":\"Statistics_StatisticsList__2KiUF\",\"StatisticsItem\":\"Statistics_StatisticsItem__3YPI_\",\"value\":\"Statistics_value__2eXJD\"};","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div className={s.Statistics}>\n      <ul className={s.StatisticsList}>\n        <li className={s.StatisticsItem}>\n          Good:<span className={s.value}>{good}</span>\n        </li>\n        <li className={s.StatisticsItem}>\n          Neutral:<span className={s.value}>{neutral}</span>\n        </li>\n        <li className={s.StatisticsItem}>\n          Bad:<span className={s.value}>{bad}</span>\n        </li>\n        <li className={s.StatisticsItem}>\n          Total:<span className={s.value}>{total}</span>\n        </li>\n        <li className={s.StatisticsItem}>\n          Positive feedback:\n          <span className={s.value}>{positivePercentage}%</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={s.FeedbackControls}>\n      {options.map(option => (\n        <button\n          type=\"button\"\n          className={s.btn}\n          data-action={option}\n          onClick={onLeaveFeedback}\n          key={option}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <div className={s.Section}>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\n\nimport s from './App.css';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n  state = {\n    good: this.props.initialValue,\n    neutral: this.props.initialValue,\n    bad: this.props.initialValue,\n  };\n  handleFeedback = ({ target }) => {\n    const type = target.dataset.action;\n    this.setState(prevState => {\n      return { [type]: prevState[type] + 1 };\n    });\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const totalFeedbackCount = this.countTotalFeedback();\n    return totalFeedbackCount\n      ? Math.round((good / totalFeedbackCount) * 100)\n      : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = ['good', 'neutral', 'bad'];\n    const totalFeedbackCount = this.countTotalFeedback();\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n        <Section title={'Statistics'}>\n          {good || neutral || bad ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedbackCount}\n              positivePercentage={positiveFeedback}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackControls\":\"FeedbackOptions_FeedbackControls__2jYkI\",\"btn\":\"FeedbackOptions_btn__1rp9P\"};"],"sourceRoot":""}